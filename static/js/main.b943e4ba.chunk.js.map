{"version":3,"sources":["../../src/components/SimpleForm/utils.js","../../src/components/SimpleForm/index.js","App.js","index.js"],"names":["renderNote","field","className","renderLabel","htmlFor","name","renderValidMessage","renderInvalidMessage","SimpleForm","props","itsOK","checkParams","onSubmit","e","onChange","onBlur","renderTitle","classes","index","key","type","placeholder","autoFocus","tabIndex","value","required","renderTypeSubmit","defaultValue","option","renderOptions","renderTypeSelect","renderTypeGeneral","console","App","fields","push","note","label","isValid","validMessage","invalidMessage","options","text","preventDefault","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b943e4ba.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function renderTypeSubmit(field, classes, index) {\r\n  return (\r\n    <div key={field.name} className=\"form-group\">\r\n      {renderLabel(field)}\r\n      <input\r\n        type={field.type}\r\n        name={field.name}\r\n        className={classes}\r\n        placeholder={field.placeholder}\r\n        autoFocus={index === 1}\r\n        tabIndex={index++}\r\n        value={field.value}\r\n        required={field.required || false}\r\n      />\r\n      {renderNote(field)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function renderTypeGeneral(field, classes, index) {\r\n  return (\r\n    <div key={field.name} className=\"form-group\">\r\n      {renderLabel(field)}\r\n      <input\r\n        type={field.type}\r\n        name={field.name}\r\n        className={classes}\r\n        placeholder={field.placeholder}\r\n        autoFocus={index === 1}\r\n        tabIndex={index++}\r\n        defaultValue={field.value}\r\n        required={field.required || false}\r\n      />\r\n      {renderNote(field)}\r\n      {renderValidMessage(field)}\r\n      {renderInvalidMessage(field)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function renderTypeSelect(field, classes, index) {\r\n  function renderOptions(field) {\r\n    if (field.options && field.options.map) {\r\n      return field.options.map((option) => (\r\n        <option key={option.value} value={option.value}>\r\n          {option.text || option.value}\r\n        </option>\r\n      ));\r\n    } else return \"\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div key={field.name} className=\"form-group\">\r\n        {renderLabel(field)}\r\n        <select\r\n          name={field.name}\r\n          className={classes}\r\n          autoFocus={index === 1}\r\n          tabIndex={index++}\r\n          defaultValue={field.value}\r\n          required={field.required || false}\r\n        >\r\n          {renderOptions(field)}\r\n        </select>\r\n        {renderNote(field)}\r\n        {renderValidMessage(field)}\r\n        {renderInvalidMessage(field)}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function renderTitle(props) {\r\n  if (props.title) {\r\n    return <h3 className=\"mt-2\">{props.title}</h3>;\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport function renderNote(field) {\r\n  if (field.note) {\r\n    return <small className=\"text-muted\">{field.note}</small>;\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport function renderLabel(field) {\r\n  if (field.label) {\r\n    return (\r\n      <label className=\"mt-2\" htmlFor={field.name}>\r\n        {field.label}\r\n      </label>\r\n    );\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport function renderValidMessage(field) {\r\n  if (field.validMessage) {\r\n    return <div className=\"valid-feedback\">{field.validMessage}</div>;\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport function renderInvalidMessage(field) {\r\n  if (field.invalidMessage) {\r\n    return <div className=\"invalid-feedback\">{field.invalidMessage}</div>;\r\n  } else {\r\n    return \"\";\r\n  }\r\n}","import React from \"react\";\r\nimport {\r\n  renderTitle,\r\n  renderTypeGeneral,\r\n  renderTypeSelect,\r\n  renderTypeSubmit\r\n} from \"./utils\";\r\n\r\n/**\r\n * ## Create a simple form\r\n *\r\n * @callback onChange\r\n * @callback onSubmit\r\n * @callback onBlur\r\n * @param {array} fields - Array containing form's fields (<input>)\r\n * @param {string} fields[].name - <input>'s name\r\n * @param {string} fields[].type - <input>'s type\r\n * @param {string} [ fields[].placeholder ] - optional <input>'s placeholder\r\n * @param {string} [ fields[].label ] - optional <input>'s label\r\n * @param {string} [ fields[].note ] - optional <input>'s note\r\n *\r\n * @param {string} [title] - optional form's title\r\n * @param {function} [onChange] - optional function for fields change handling\r\n * @param {function} [onSubmit] - optional function for form submit handling\r\n * @param {function} [onBlur] - optional function for focus out handling\r\n * @version 1.0.1\r\n * @author [Franco Valledor](https://github.com/francovalledor)\r\n */\r\nexport function SimpleForm(props) {\r\n  // FUNCTIONS\r\n  // Validations\r\n  function checkParams() {\r\n    let itsOK = true;\r\n\r\n    if (!props.fields || !props.fields.map) {\r\n      itsOK = false;\r\n    }\r\n\r\n    return itsOK;\r\n  }\r\n\r\n  // Event Handlers\r\n  function handleChange(e) {\r\n    if (props.onChange) {\r\n      props.onChange(e);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (props.onSubmit) {\r\n      props.onSubmit(e);\r\n    }\r\n  }\r\n\r\n  function handleFocusOut(e) {\r\n    if (props.onBlur) {\r\n      props.onBlur(e);\r\n    }\r\n  }\r\n\r\n  function renderFields(fields) {\r\n    let index = 1;\r\n    return props.fields.map((field) => {\r\n      let classes = \"form-control\";\r\n      if (field.isValid === true) {\r\n        classes += \" is-valid\";\r\n      } else if (field.isValid === false) {\r\n        classes += \" is-invalid\";\r\n      }\r\n\r\n      switch (field.type.toLowerCase()) {\r\n        case \"submit\":\r\n          return renderTypeSubmit(field, classes, index);\r\n\r\n        case \"select\":\r\n          return renderTypeSelect(field, classes, index);\r\n\r\n        default:\r\n          return renderTypeGeneral(field, classes, index);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   *    BODY\r\n   */\r\n  if (checkParams()) {\r\n    return (\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        onChange={handleChange}\r\n        onBlur={handleFocusOut}\r\n      >\r\n        {renderTitle(props)}\r\n        {renderFields(props.fields)}\r\n      </form>\r\n    );\r\n  } else {\r\n    console.error(\"CreateForm: Missing params\");\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport default SimpleForm;\r\n","import React from 'react'\r\n\r\nimport { SimpleForm } from 'valledor-react-form'\r\n\r\nconst App = () => {\r\n  let fields = []\r\n\r\n  fields.push({\r\n    name: 'username',\r\n    type: 'text',\r\n    placeholder: 'Username',\r\n    required: true\r\n  })\r\n\r\n  fields.push({\r\n    name: 'password',\r\n    type: 'password',\r\n    placeholder: 'Password',\r\n    note: 'must include letters in mixed case and numbers'\r\n  })\r\n\r\n  fields.push({\r\n    label: 'Date of birth',\r\n    name: 'date',\r\n    type: 'date',\r\n    value: '2020-12-02',\r\n    isValid: true,\r\n    validMessage: 'Looks good',\r\n    invalidMessage: \"Doesn't looks good\"\r\n  })\r\n\r\n  fields.push({\r\n    name: 'email',\r\n    type: 'email',\r\n    placeholder: 'email@email.com',\r\n    value: 'francovalledor@gmail.com',\r\n    required: true\r\n  })\r\n\r\n  fields.push({\r\n    name: 'gender',\r\n    type: 'select',\r\n    label: 'Gender',\r\n    options: [\r\n      {value: \"M\", text: \"M\"},\r\n      {value: \"F\", text: \"F\"},\r\n      {value: \"NB\", text: \"NB\"}\r\n    ]\r\n  })\r\n\r\n  fields.push({\r\n    name: 'submit',\r\n    type: 'submit',\r\n    value: 'Sign In',\r\n    required: true\r\n  })\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault()\r\n    console.log('submit')\r\n  }\r\n\r\n  function onChange(e) {\r\n    e.preventDefault()\r\n    console.log('change')\r\n  }\r\n\r\n  return (\r\n    <div className='container p-2 mt-4'>\r\n      <SimpleForm\r\n        onChange={onChange}\r\n        onSubmit={onSubmit}\r\n        fields={fields}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import './index.css'\r\nimport \"bootstrap\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}